{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-05-08T01:49:05.273Z",
    "end": "2019-05-08T01:49:20.844Z",
    "duration": 15571,
    "testsRegistered": 13,
    "passPercent": 38.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 8,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "046e7503-0973-4912-a10c-fdb7ccdc9f07",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "9cf5b39b-5ca1-489a-95dc-300cfc116f3c",
        "title": "Actions",
        "fullFile": "",
        "file": "",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": ".type() - type into a DOM element",
            "fullTitle": "Actions .type() - type into a DOM element",
            "duration": 6194,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
            "err": {},
            "isRoot": false,
            "uuid": "b5e1c3f9-ea50-48f1-8b47-6752dcc58d80",
            "isHook": false,
            "skipped": false
          },
          {
            "title": ".focus() - focus on a DOM element",
            "fullTitle": "Actions .focus() - focus on a DOM element",
            "duration": 1269,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
            "err": {},
            "isRoot": false,
            "uuid": "81023c6e-9fc4-4b78-8485-834d90ae78d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": ".blur() - blur off a DOM element",
            "fullTitle": "Actions .blur() - blur off a DOM element",
            "duration": 1413,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
            "err": {},
            "isRoot": false,
            "uuid": "4b82b290-4986-4c85-8efc-bd0f3ccb22d6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": ".clear() - clears an input or textarea element",
            "fullTitle": "Actions .clear() - clears an input or textarea element",
            "duration": 1241,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
            "err": {},
            "isRoot": false,
            "uuid": "9cb9e817-33c4-440a-9517-10dcd0a23cb9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": ".submit() - submit a form",
            "fullTitle": "Actions .submit() - submit a form",
            "duration": 1377,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
            "err": {},
            "isRoot": false,
            "uuid": "4f9ae282-0a1b-417c-b549-4d9755984340",
            "isHook": false,
            "skipped": false
          },
          {
            "title": ".click() - click on a DOM element",
            "fullTitle": "Actions .click() - click on a DOM element",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3d8eb38c-177f-4576-98ba-5498ab2563b6",
            "isHook": false,
            "skipped": true
          },
          {
            "title": ".dblclick() - double click on a DOM element",
            "fullTitle": "Actions .dblclick() - double click on a DOM element",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
            "err": {},
            "isRoot": false,
            "uuid": "8cc36c09-b61f-4204-91f8-f399f2a0368e",
            "isHook": false,
            "skipped": true
          },
          {
            "title": ".check() - check a checkbox or radio element",
            "fullTitle": "Actions .check() - check a checkbox or radio element",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
            "err": {},
            "isRoot": false,
            "uuid": "9d7915f2-0719-4656-a16e-b4924fc21da2",
            "isHook": false,
            "skipped": true
          },
          {
            "title": ".uncheck() - uncheck a checkbox element",
            "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
            "err": {},
            "isRoot": false,
            "uuid": "aaddb94f-6572-475e-a944-3765d9535696",
            "isHook": false,
            "skipped": true
          },
          {
            "title": ".select() - select an option in a <select> element",
            "fullTitle": "Actions .select() - select an option in a <select> element",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/select\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']);",
            "err": {},
            "isRoot": false,
            "uuid": "9305913b-413f-46e4-927d-ecc662575529",
            "isHook": false,
            "skipped": true
          },
          {
            "title": ".scrollIntoView() - scroll an element into view",
            "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
            "err": {},
            "isRoot": false,
            "uuid": "c38e3b55-f55b-47eb-9c52-3e9b409b7238",
            "isHook": false,
            "skipped": true
          },
          {
            "title": ".trigger() - trigger an event on a DOM element",
            "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
            "err": {},
            "isRoot": false,
            "uuid": "f08122a9-b3cb-49fe-bf71-145032fcc71f",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "cy.scrollTo() - scroll the window or element to a position",
            "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
            "duration": 0,
            "state": "skipped",
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// https://on.cypress.io/scrollTo\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
            "err": {},
            "isRoot": false,
            "uuid": "489177bb-8cf8-44c6-bc02-d3d5497cd8f4",
            "isHook": false,
            "skipped": true
          }
        ],
        "suites": [],
        "passes": [
          "b5e1c3f9-ea50-48f1-8b47-6752dcc58d80",
          "81023c6e-9fc4-4b78-8485-834d90ae78d3",
          "4b82b290-4986-4c85-8efc-bd0f3ccb22d6",
          "9cb9e817-33c4-440a-9517-10dcd0a23cb9",
          "4f9ae282-0a1b-417c-b549-4d9755984340"
        ],
        "failures": [],
        "pending": [],
        "skipped": [
          "3d8eb38c-177f-4576-98ba-5498ab2563b6",
          "8cc36c09-b61f-4204-91f8-f399f2a0368e",
          "9d7915f2-0719-4656-a16e-b4924fc21da2",
          "aaddb94f-6572-475e-a944-3765d9535696",
          "9305913b-413f-46e4-927d-ecc662575529",
          "c38e3b55-f55b-47eb-9c52-3e9b409b7238",
          "f08122a9-b3cb-49fe-bf71-145032fcc71f",
          "489177bb-8cf8-44c6-bc02-d3d5497cd8f4"
        ],
        "duration": 11494,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}